// Script para ajudar a diagnosticar e resolver problemas de conex√£o com Firebase
console.log('üîé Firebase Diagnostics Tool carregado');

// Verificar status da conex√£o
function checkFirebaseConnection() {
    console.log('üîç Verificando conex√£o com Firebase...');
    
    // Verificar se o Firebase est√° definido
    if (!window.firebase && !window.firebaseServices) {
        console.error('‚ùå Firebase n√£o est√° definido. Poss√≠vel problema de carregamento dos scripts.');
        return false;
    }
    
    // Verificar se a configura√ß√£o est√° presente
    if (!window.firebaseConfig) {
        console.error('‚ùå Configura√ß√£o do Firebase n√£o encontrada (firebaseConfig).');
        return false;
    }
    
    // Verificar se a aplica√ß√£o foi inicializada
    if (window.firebase && !firebase.apps || firebase.apps.length === 0) {
        console.error('‚ùå Aplica√ß√£o Firebase n√£o foi inicializada.');
        return false;
    }
    
    // Verificar se o Firestore est√° dispon√≠vel
    if (!window.firebaseServices || !window.firebaseServices.db) {
        console.error('‚ùå Firestore n√£o est√° dispon√≠vel.');
        return false;
    }
    
    // Verificar autentica√ß√£o
    const auth = window.firebaseServices?.getAuth ? window.firebaseServices.getAuth() : null;
    if (!auth) {
        console.error('‚ùå Servi√ßo de autentica√ß√£o n√£o est√° dispon√≠vel.');
        return false;
    }
    
    // Verificar usu√°rio autenticado
    const currentUser = auth.currentUser;
    if (!currentUser) {
        console.warn('‚ö†Ô∏è Usu√°rio n√£o autenticado. Login necess√°rio para acessar o Firestore.');
        return false;
    }
    
    console.log('‚úÖ Conex√£o com Firebase verificada e funcional!');
    return true;
}

// Fun√ß√£o para restaurar a conex√£o com o Firebase
function repairFirebaseConnection() {
    console.log('üîß Tentando restaurar conex√£o com Firebase...');
    
    try {
        // Tentar reinicializar o Firebase se necess√°rio
        if (!window.firebaseServices || !window.isFirebaseReady) {
            console.log('üîÑ Reinicializando Firebase...');
            
            // Verificar se temos a configura√ß√£o
            if (!window.firebaseConfig) {
                console.error('‚ùå Configura√ß√£o do Firebase n√£o encontrada. N√£o √© poss√≠vel reinicializar.');
                return false;
            }
            
            // Salvar estado atual para n√£o perder dados
            saveToLocalStorage();
            
            // Reinicializar Firebase com a configura√ß√£o existente
            if (typeof initializeFirebase === 'function') {
                initializeFirebase();
                console.log('‚úÖ Firebase reinicializado com sucesso!');
                return true;
            } else {
                console.error('‚ùå Fun√ß√£o initializeFirebase n√£o encontrada.');
                return false;
            }
        }
        
        return true;
    } catch (error) {
        console.error('‚ùå Erro ao tentar restaurar conex√£o:', error);
        return false;
    }
}

// Verificar e tentar corrigir o problema atual
function diagnoseAndFixFirebaseIssue() {
    console.log('ü©∫ Iniciando diagn√≥stico do Firebase...');
    
    // Verificar a conex√£o atual
    if (checkFirebaseConnection()) {
        console.log('‚úÖ Firebase est√° funcionando corretamente!');
        return;
    }
    
    // Tentar reparar a conex√£o
    if (repairFirebaseConnection()) {
        console.log('üéâ Conex√£o com Firebase restaurada com sucesso!');
    } else {
        console.log('‚ö†Ô∏è N√£o foi poss√≠vel restaurar a conex√£o com Firebase autom√°ticamente.');
        console.log('üìã Sugest√µes:');
        console.log('  1. Verifique sua conex√£o com a internet');
        console.log('  2. Recarregue a p√°gina');
        console.log('  3. Limpe o cache do navegador');
        console.log('  4. Verifique se as credenciais do Firebase s√£o v√°lidas');
    }
}

// Adicionar bot√£o de diagn√≥stico √† p√°gina
function addDiagnosticButton() {
    const btnContainer = document.createElement('div');
    btnContainer.style.position = 'fixed';
    btnContainer.style.bottom = '20px';
    btnContainer.style.right = '20px';
    btnContainer.style.zIndex = '9999';
    
    const btn = document.createElement('button');
    btn.textContent = 'üîß Resolver Problema Firebase';
    btn.style.backgroundColor = '#f5f5f5';
    btn.style.border = '1px solid #ddd';
    btn.style.borderRadius = '4px';
    btn.style.padding = '8px 12px';
    btn.style.cursor = 'pointer';
    btn.style.boxShadow = '0 2px 5px rgba(0,0,0,0.2)';
    btn.style.transition = 'all 0.3s';
    
    btn.onmouseover = () => {
        btn.style.backgroundColor = '#e0e0e0';
    };
    btn.onmouseout = () => {
        btn.style.backgroundColor = '#f5f5f5';
    };
    
    btn.onclick = () => {
        diagnoseAndFixFirebaseIssue();
    };
    
    btnContainer.appendChild(btn);
    document.body.appendChild(btnContainer);
}

// Executar quando o documento estiver pronto
document.addEventListener('DOMContentLoaded', () => {
    // Adicionar bot√£o de diagn√≥stico ap√≥s 3 segundos (para dar tempo de tudo carregar)
    setTimeout(() => {
        addDiagnosticButton();
    }, 3000);
    
    // Verificar status ap√≥s 5 segundos
    setTimeout(() => {
        if (!window.isFirebaseReady) {
            console.warn('‚ö†Ô∏è Firebase n√£o inicializou corretamente ap√≥s 5 segundos.');
        }
    }, 5000);
});