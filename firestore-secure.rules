rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // 🔐 REGRAS DE SEGURANÇA MULTIUSUÁRIO POR RESTAURANTE
    
    // ❌ REGRA PADRÃO: NEGAR TUDO por segurança
    match /{document=**} {
      allow read, write: if false;
    }
    
    // 🏢 Restaurantes - APENAS o proprietário pode gerenciar
    match /restaurants/{restaurantId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.ownerId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.ownerId;
    }
    
    // 👤 Usuários - APENAS o próprio usuário ou admin do restaurante pode acessar
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Admin do restaurante pode ler dados de usuários do mesmo restaurante
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.restaurantId == resource.data.restaurantId &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'manager'];
    }
    
    // Função helper para verificar se usuário pertence ao restaurante
    function belongsToRestaurant(restaurantId) {
      return request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.restaurantId == restaurantId;
    }
    
    // 🥕 Insumos - APENAS usuários do mesmo restaurante
    match /insumos/{insumoId} {
      allow read: if belongsToRestaurant(resource.data.restaurantId);
      allow write: if belongsToRestaurant(resource.data.restaurantId);
      allow create: if request.auth != null && 
        belongsToRestaurant(request.resource.data.restaurantId);
    }
    
    // 📝 Fichas Técnicas - APENAS usuários do mesmo restaurante  
    match /fichasTecnicas/{fichaId} {
      allow read: if belongsToRestaurant(resource.data.restaurantId);
      allow write: if belongsToRestaurant(resource.data.restaurantId);
      allow create: if request.auth != null && 
        belongsToRestaurant(request.resource.data.restaurantId);
    }
    
    // 🍽️ Pratos - APENAS usuários do mesmo restaurante
    match /pratos/{pratoId} {
      allow read: if belongsToRestaurant(resource.data.restaurantId);
      allow write: if belongsToRestaurant(resource.data.restaurantId);
      allow create: if request.auth != null && 
        belongsToRestaurant(request.resource.data.restaurantId);
    }
    
    // 🛒 Compras - APENAS usuários do mesmo restaurante
    match /compras/{compraId} {
      allow read: if belongsToRestaurant(resource.data.restaurantId);
      allow write: if belongsToRestaurant(resource.data.restaurantId);
      allow create: if request.auth != null && 
        belongsToRestaurant(request.resource.data.restaurantId);
    }
    
    // ⚙️ Configurações - APENAS usuários do mesmo restaurante
    match /configuracoes/{configId} {
      allow read: if belongsToRestaurant(resource.data.restaurantId);
      allow write: if belongsToRestaurant(resource.data.restaurantId);
      allow create: if request.auth != null && 
        belongsToRestaurant(request.resource.data.restaurantId);
    }
    
    // 🏷️ Fornecedores - APENAS usuários do mesmo restaurante
    match /fornecedores/{fornecedorId} {
      allow read: if belongsToRestaurant(resource.data.restaurantId);
      allow write: if belongsToRestaurant(resource.data.restaurantId);
      allow create: if request.auth != null && 
        belongsToRestaurant(request.resource.data.restaurantId);
    }
  }
}
